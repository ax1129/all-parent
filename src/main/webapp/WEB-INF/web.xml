<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

	<display-name>ssm1</display-name>
	
	<!-- 配置全局参数(指定spring相关配置的路径) -->
	<context-param>
		<!-- 参数名(环境配置路径) -->
		<param-name>contextConfigLocation</param-name>
		<!-- 参数值(多个路径用,号分隔，也可以使用*号后缀来匹配所有相同前缀和位置的文件[默认名applicationContext.xml]) -->
		<param-value>classpath:config/spring-mybatis.xml</param-value>
	</context-param>
	
	<!-- 配置监听器(spring容器的 监听器)-->
	<listener>
		<!-- 监听器的全类名 -->
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 配置一个Servlet(配置spring-mvc的前端控制器) -->
	<servlet>
		<!-- Servlet的标识别名 -->
		<servlet-name>springmvc</servlet-name>
		<!-- Servlet的全类名 -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 配置Servlet的参数(spring-mvc配置文件的路径) -->
		<init-param>
			<!-- 参数名(contextConfigLocation代表路径) -->
			<param-name>contextConfigLocation</param-name>
			<!-- 参数值(Mvc配置文件为默认路径为WEB-INF/springmvc-servlet.xml) -->
			<param-value>classpath:config/spring-mvc.xml</param-value>
		</init-param>
		<!-- 配置启动优先级 -->
		<load-on-startup>0</load-on-startup>
	</servlet>
	<!-- 配置Servlet映射的URL(配置前端控制器拦劫的URL) -->
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<!-- URL以/开始，表示基于域名的绝对路径，也可以使用通配符*号 -->
		<!-- 通常配置*.do或*.action，只处理动态请求；-->
		<!-- 如果配置/，会拦劫所有URL，导致静态内容不能正常显示，需要特殊处理；-->
		<!-- 不能配置/*，否则响应返回时也会被拦劫，然后因为在HandlerMapper中没有相关映射而报404错误 -->
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	
	<!-- 配置POST字符编码过滤器(GET乱码在Tomcat中配置) -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 配置自定义的过滤器（用于在Controller中获取Request和Response） -->
	<filter>
		<!-- 过滤器的标识 -->
		<filter-name>rch</filter-name>
		<!-- 过滤器全类名 -->
		<filter-class>cn.demoncat.assist.filter.RequestContextHolder</filter-class>
	</filter>
	<!-- 配置过滤器映射的URL -->
	<filter-mapping>
		<filter-name>rch</filter-name>
		<!-- 拦劫的URL -->
		<url-pattern>/*</url-pattern>
		<!-- 过滤的类型(REQUEST、FORWARD、INCLUDE) -->
		<!-- <dispatcher>REQUEST</dispatcher> -->
	</filter-mapping>

	<!-- 配置Session不活跃过期时间(单位为分钟) -->
	<session-config>
		<session-timeout>30</session-timeout>	
	</session-config>
	
	<!-- 首页 -->
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<!-- 异常处理页 -->
	<error-page>
		<error-code>404</error-code>
		<location>/404.html</location>
	</error-page>

</web-app>

